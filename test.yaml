networks:
  ros: {}
services:
  # plansys2:
  #   command: ros2 launch plansys2_patrol_navigation_example patrol_example_launch.py
  #   image: planner_nodes
  #   networks:
  #   - ros
  #   environment:
  #     - TURTLEBOT3_MODEL=waffle
  #     - GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/opt/ros/humble/share/turtlebot3_gazebo/models
  # controller:
  #   command: ros2 run plansys2_patrol_navigation_example patrolling_controller_node
  #   image: planner_nodes
  #   networks:
  #   - ros
  #   environment:
  #     - TURTLEBOT3_MODEL=waffle
  #     - GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/opt/ros/humble/share/turtlebot3_gazebo/models
  plansys2:
    command: ros2 launch labsample_plansys2 planning.launch.py
    image: planner_nodes
    networks:
    - ros
  controller:
    command: ros2 run labsample_plansys2 controller_node
    image: planner_nodes
    networks:
    - ros
  plannerPOPF:
    command: ros2 run popf popf -v1 -L1 ./src/domain-3.pddl ./src/problem.pddl
    image: planner_nodes
    networks:
    - ros
    
  # all:
  #   command: bash -c "cd src/planner/launch && ros2 launch planner planning.launch.py"
  #   image: planner_nodes
  #   networks:
  #   - ros
  #   environment:
  #   - REPLAN=True
  #   - PROBLEM_RATE=10
  # arm:
  #   command: ros2 run planner arm
  #   image: planner_nodes
  #   networks:
  #   - ros
  # coordinator:
  #   command: ros2 run planner coordinator True
  #   image: planner_nodes
  #   networks:
  #   - ros
  # environment:
  #   command: ros2 run planner environment 10
  #   image: planner_nodes
  #   networks:
  #   - ros
  # nurse:
  #   command: ros2 run planner nurse
  #   image: planner_nodes
  #   networks:
  #   - ros
  # planner:
  #   command: ros2 run planner planner
  #   image: planner_nodes
  #   networks:
  #   - ros
  # robot:
  #   command: ros2 run planner robot
  #   image: planner_nodes
  #   networks:
  #   - ros
version: '2.3'
